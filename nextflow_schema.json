{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/phac-nml/viralassembly/main/nextflow_schema.json",
    "title": "phac-nml/viralassembly pipeline parameters",
    "description": "Assemble and QC viral reads",
    "type": "object",
    "$defs": {
        "input_data_option_choose_1": {
            "title": "Input data option (choose 1)",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data using either an input samplesheet or an input directory.",
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "fastq_pass": {
                    "type": "string",
                    "description": "Path to directory containing either barcoded fastq files or individually named fastq files",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "Barcodes must be formatted as 'barcode##' to be found. Fastq files must end in '.fastq' or '.fastq.gz'"
                }
            }
        },
        "important_input_values": {
            "title": "Important input values",
            "type": "object",
            "description": "Important pipeline values for that are based on which variant caller is being used along with if any metadata is to be added",
            "default": "",
            "fa_icon": "fas fa-sign-in-alt",
            "properties": {
                "variant_caller": {
                    "type": "string",
                    "fa_icon": "fas fa-terminal",
                    "description": "Choose which variant caller to use. Options are 'medaka', 'clair3', and 'nanopolish'"
                },
                "metadata": {
                    "type": "string",
                    "fa_icon": "fas fa-file-csv",
                    "description": "Path to metadata TSV file containing at least columns 'sample' and 'barcode'"
                },
                "fast5_pass": {
                    "type": "string",
                    "fa_icon": "fas fa-folder",
                    "description": "Path to directory containing fast5 files for nanopolish only"
                },
                "sequencing_summary": {
                    "type": "string",
                    "fa_icon": "fas fa-file-alt",
                    "description": "Path to sequencing_summary file needed for nanopolish only"
                }
            },
            "required": ["variant_caller"]
        },
        "variant_model_settings": {
            "title": "Variant model settings",
            "type": "object",
            "description": "Settings pertaining to the specific variant callers models. Be as accurate as possible for best results",
            "default": "",
            "properties": {
                "medaka_model": {
                    "type": "string",
                    "default": "r941_min_hac_g507",
                    "description": "Model to use in medaka. See medaka docs for more info"
                },
                "clair3_model": {
                    "type": "string",
                    "default": "r941_prom_sup_g5014",
                    "description": "Model to use in clair3. See clair3 docs for more info"
                },
                "clair3_user_variant_model": {
                    "type": "string",
                    "description": "Path to local clair3 model folder"
                },
                "clair3_no_pool_split": {
                    "type": "boolean",
                    "description": "Pass to not split amplicon pools when running clair3"
                }
            },
            "fa_icon": "fas fa-tools"
        },
        "read_filtering_options": {
            "title": "Read filtering options",
            "type": "object",
            "description": "Options pertaining to how to filter reads",
            "default": "",
            "fa_icon": "fas fa-filter",
            "properties": {
                "min_reads": {
                    "type": "integer",
                    "default": 20,
                    "description": "Minimum reads required to run the sample after length filtering"
                },
                "min_length": {
                    "type": "integer",
                    "default": 200,
                    "description": "Minimum read length to keep"
                },
                "max_length": {
                    "type": "integer",
                    "default": 3000,
                    "description": "Maximum read length to keep"
                }
            }
        },
        "scheme_options": {
            "title": "Scheme options",
            "type": "object",
            "description": "Options pertaining to the amplicon sequencing scheme. Scheme directories must include '*.scheme.bed' and '*.reference.fasta'",
            "default": "",
            "properties": {
                "reference": {
                    "type": "string",
                    "description": "Path to local reference file to map to instead of using a primer scheme"
                },
                "scheme": {
                    "type": "string",
                    "description": "Name of the pathogen to look for a scheme to use"
                },
                "scheme_version": {
                    "type": "string",
                    "description": "Name of the amplicon scheme"
                },
                "scheme_repo": {
                    "type": "string",
                    "default": "https://github.com/artic-network/primer-schemes.git",
                    "description": "URL to the online scheme git repo to download"
                },
                "local_scheme": {
                    "type": "string",
                    "description": "Path to local scheme repo use instead of downloading"
                }
            },
            "fa_icon": "fas fa-book-open"
        },
        "artic_minion_options": {
            "title": "Artic minion options",
            "type": "object",
            "description": "Options pertaining to the steps in the artic minion pipeline",
            "default": "",
            "properties": {
                "normalise": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Normalize coverage",
                    "fa_icon": "fas fa-balance-scale"
                },
                "no_frameshift": {
                    "type": "boolean",
                    "description": "If passed, skip detected frameshift variants"
                },
                "use_bwa": {
                    "type": "boolean",
                    "description": "If passed, use BWA insead of minimap2 for read mapping"
                },
                "skip_longshot": {
                    "type": "boolean",
                    "description": "If passed, skip running longshot with medaka pipeline",
                    "fa_icon": "fas fa-forward"
                },
                "use_artic_tool": {
                    "type": "boolean",
                    "description": "Pass to run tool artic pipeline instead of the nextflow adaptation this pipeline uses"
                }
            }
        },
        "snpeff_options": {
            "title": "SnpEff options",
            "type": "object",
            "description": "Options pertaining to running SnpEff for variant annotation",
            "default": "",
            "properties": {
                "skip_snpeff": {
                    "type": "boolean",
                    "description": "If passed, skips running SnpEff",
                    "fa_icon": "fas fa-forward"
                },
                "gff": {
                    "type": "string",
                    "description": "Path to gff3 formatted file to be used to build SnpEff database"
                }
            }
        },
        "qc_options": {
            "title": "QC options",
            "type": "object",
            "description": "Options pertaining to QC outputs/stats",
            "default": "",
            "properties": {
                "skip_qc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "If passed, skip running all QC and reporting steps"
                },
                "pcr_primer_bed": {
                    "type": "string",
                    "description": "Path to PCR Primer bed to check for any mutations occuring in defined regions"
                },
                "neg_control_threshold": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Float threshold for a negative control sample to be considered contaminated"
                },
                "neg_ctrl_substrings": {
                    "type": "string",
                    "default": "neg,ntc,blank",
                    "description": "Control prefixes separated by a ',' to determine which samples are negative controls"
                }
            },
            "fa_icon": "fas fa-star"
        },
        "report_generation_options": {
            "title": "Report generation options",
            "type": "object",
            "description": "Options pertaining to final report generation",
            "default": "",
            "properties": {
                "custom_report": {
                    "type": "boolean",
                    "fa_icon": "fas fa-file-signature",
                    "description": "Create custom report instead of the MultiQC report (singularity not yet supported for custom reports)"
                },
                "multiqc_config_overall": {
                    "type": "string",
                    "default": "$projectDir/assets/multiqc_config_overall.yaml",
                    "description": "MultiQC overall run config yaml file"
                },
                "multiqc_config_sample": {
                    "type": "string",
                    "default": "$projectDir/assets/multiqc_config_sample.yaml",
                    "description": "MultiQC sample config yaml file"
                }
            },
            "fa_icon": "fas fa-file-code"
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open",
                    "default": "results"
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "fa_icon": "fas fa-palette",
                    "description": "Do not use coloured log outputs."
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "fas fa-minus-square"
                },
                "max_memory": {
                    "type": "string",
                    "default": "256.GB",
                    "fa_icon": "fas fa-database",
                    "description": "Maximum memory to use in pipeline for a single process. Given as a string with int.GB"
                },
                "max_cpus": {
                    "type": "integer",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "description": "Maximum number of CPUs available to use for a single process"
                },
                "max_time": {
                    "type": "string",
                    "default": "120.h",
                    "fa_icon": "fas fa-clock",
                    "description": "Maximum time available for a single process to run with"
                }
            },
            "required": ["outdir"]
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_data_option_choose_1"
        },
        {
            "$ref": "#/$defs/important_input_values"
        },
        {
            "$ref": "#/$defs/variant_model_settings"
        },
        {
            "$ref": "#/$defs/read_filtering_options"
        },
        {
            "$ref": "#/$defs/scheme_options"
        },
        {
            "$ref": "#/$defs/artic_minion_options"
        },
        {
            "$ref": "#/$defs/snpeff_options"
        },
        {
            "$ref": "#/$defs/qc_options"
        },
        {
            "$ref": "#/$defs/report_generation_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
